/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import algoritmos.ItemMochila;
import algoritmos.MochilaBooleana;
import complementar.myJTable;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author deadlock
 */
public class MochilaBooleanaGui extends javax.swing.JPanel {

    /**
     * Creates new form MochilaFracionaria
     */
    public MochilaBooleanaGui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jFormattedTextFieldCapacidade = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new myJTable()
        ;
        jFormattedTextFielNumObjeto = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(800, 600));

        jLabel3.setText("Capacidade da mochila");

        jFormattedTextFieldCapacidade.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel4.setText("Mochila viável ");

        jTextArea3.setEditable(false);
        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        jButton2.setText("executar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("gerar tabela");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Objetos", "Peso", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jFormattedTextFielNumObjeto.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel5.setText("Numero de objetos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 776, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jFormattedTextFieldCapacidade, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jFormattedTextFielNumObjeto, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFormattedTextFieldCapacidade, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextFielNumObjeto, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel defaultTableModel = (DefaultTableModel) jTable1.getModel();
        defaultTableModel.setRowCount(0);
        if(!jFormattedTextFielNumObjeto.getText().isEmpty()){
            int value = Integer.parseInt(jFormattedTextFielNumObjeto.getText());
           
            for(int i = 0;i < value;i++){
                String [] campos = new String[3];
                campos[0] = "Objeto "+(i+1);
                defaultTableModel.addRow(campos);
            }

        }              
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String capacidade = jFormattedTextFieldCapacidade.getText();
        
        if(capacidade.isEmpty()){
            JOptionPane.showMessageDialog(null,"O campo carga deve estar preenchido!");
            return;
        }
        
        if(Integer.parseInt(capacidade) < 1){
            JOptionPane.showMessageDialog(null,"O campo deve ser maior que zero!");
            return;
        }
        
        if(jTable1.getRowCount() == 0){
            JOptionPane.showMessageDialog(null,"Tabela vazia!");
            return;
        }
        
        jTable1.getSelectionModel().clearSelection();
        
        if(jTable1.isEditing()) jTable1.getCellEditor().stopCellEditing();

        // Se está tudo OK, faz a combinação
        // Primeiro lê a tabela e cria os itens correspondentes
        ItemMochila itens[] = listaItens();
        // Depois cria um objeto Mochila e envia os itens para ela, obtendo como retorno um array list com
        // os itens que fazem parte da solucao
        ArrayList<ItemMochila> solucao = new ArrayList();
        MochilaBooleana mochila = new MochilaBooleana(itens,Integer.parseInt(capacidade));
        solucao = mochila.efetuaCombinacao();
        // Agora destaca na tabela os itens da solução, se houver algum       
        
        jTextArea3.setText(mostraSolucao(solucao));
            
    }//GEN-LAST:event_jButton2ActionPerformed
    private String mostraSolucao(ArrayList<ItemMochila> solucao){
        // mostra um JOptionPane com a solução
        String aux = "";
        for(ItemMochila item: solucao){
            aux += item.getNome()+"\n";
        }
        return aux;
    }
    
    private ItemMochila[] listaItens(){
        // Retorna uma lista de itens com os itens da tabela
        int valor;
        int peso;
        ItemMochila itens[] = new ItemMochila[jTable1.getRowCount()];
        DefaultTableModel defaultTableModel = (DefaultTableModel)jTable1.getModel();
        
        for(int i=0; i<jTable1.getRowCount(); i++){
            
            
            for(int j = 1;j < jTable1.getColumnCount();j++){
                
                String value =  (String) defaultTableModel.getValueAt(i,j);    

                if(value == null || value.isEmpty()) {
                    JOptionPane.showMessageDialog(this,"Todos os campos devem estar preenchidos!");
                    return null;
                }
                
                if(Integer.parseInt(value) < 1){
                    JOptionPane.showMessageDialog(this,"Valore da tabela devem ser maior que zero!");
                    return null;
                }
            }            
            
            valor = Integer.parseInt((String) defaultTableModel.getValueAt(i, 2));
            peso = Integer.parseInt((String) defaultTableModel.getValueAt(i, 1));
            itens[i] = new ItemMochila((String) defaultTableModel.getValueAt(i, 0),peso, valor);
        }
        return itens;
    }
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JFormattedTextField jFormattedTextFielNumObjeto;
    private javax.swing.JFormattedTextField jFormattedTextFieldCapacidade;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea3;
    // End of variables declaration//GEN-END:variables
}
